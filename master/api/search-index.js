var searchIndex = new Map(JSON.parse('[["cfgrammar",{"t":"EEFFPFEEGFPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNCNNNNNNNNNNNNNNNNNNNNCFNNNNNNNNNNNNNNNPGPFPKNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMNNNNNNNNNNEPPPPPEEPEEEEEGGCNNNNNNNNNNNNNNNNNNCNNCNNCNNCNNNNNNNNNNFFFFFPGPOONNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNOOONNNNNNNNNNNNNNNNNONNNNNNNONOOOOOOOOONOOONNNNNNNNOONNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNFNNNNNNNNNNNGPPFIPFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGPPPPPPPFGIFGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["Location","NewlineCache","PIdx","RIdx","Rule","SIdx","Span","Spanned","Symbol","TIdx","Token","as_storaget","","","","borrow","","","","","borrow_decode","","","","","borrow_mut","","","","","clone","","","","","clone_into","","","","","clone_to_uninit","","","","","cmp","","","","compare","","","","decode","","","","","encode","","","","","eq","","","","","equivalent","","","","","","","","","","","","","","","fmt","","","","","from","","","","","hash","","","","","into","","","","","newlinecache","partial_cmp","","","","span","to_owned","","","","","try_from","","","","","try_into","","","","","type_id","","","","","yacc","NewlineCache","borrow","borrow_mut","byte_to_line_byte","byte_to_line_num","byte_to_line_num_and_col_num","feed","from","from_iter","from_str","into","new","span_line_bytes","try_from","try_into","type_id","CommandLine","Location","Other","Span","","Spanned","borrow","","borrow_decode","borrow_mut","","clone","","clone_into","","clone_to_uninit","","decode","encode","end","eq","","equivalent","","","","","","fmt","","from","","","hash","into","","is_empty","len","new","spans","spanskind","start","to_owned","","to_tokens","try_from","","try_into","","type_id","","AssocKind","Eco","GenericParseTree","Grmtools","NoAction","Original","Precedence","SentenceGenerator","UserAction","YaccGrammar","YaccGrammarError","YaccGrammarErrorKind","YaccGrammarWarning","YaccGrammarWarningKind","YaccKind","YaccOriginalActionKind","ast","borrow","","borrow_mut","","clone","","clone_into","","clone_to_uninit","","eq","","equivalent","","","","","","firsts","fmt","","follows","from","","grammar","into","","parser","to_owned","","to_tokens","","try_from","","try_into","","type_id","","ASTModificationError","ASTWithValidityInfo","GrammarAST","Production","Rule","","Symbol","Token","action","actiont","add_prod","add_programs","add_rule","ast","avoid_insert","borrow","","","","","","borrow_mut","","","","","","clone","","","","","","clone_and_change_start_rule","clone_into","","","","","","clone_to_uninit","","","","","","epp","eq","equivalent","","","errors","expect","expect_unused","expectrr","fmt","","","","","","","","from","","","","","","from_str","get_rule","has_token","implicit_tokens","into","","","","","","is_valid","name","new","parse_generics","parse_param","pidxs","precedence","precs","prod_span","prods","programs","rules","set_programs","spans","start","symbols","to_owned","","","","","","to_string","","token_directives","tokens","try_from","","","","","","try_into","","","","","","type_id","","","","","","warnings","yacc_kind","YaccFirsts","borrow","borrow_mut","firsts","fmt","from","into","is_epsilon_set","is_set","new","set","try_from","try_into","type_id","YaccFollows","borrow","borrow_mut","fmt","follows","from","into","is_set","new","try_from","try_into","type_id","AssocKind","Left","Nonassoc","Precedence","PrecedenceLevel","Right","SentenceGenerator","YaccGrammar","action","actiontype","avoid_insert","borrow","","","","borrow_decode","","","borrow_mut","","","","clone","","clone_into","","clone_to_uninit","","decode","","","encode","","","eof_token_idx","eq","","expect","expectrr","firsts","fmt","","follows","from","","","","from_str","has_path","implicit_rule","into","","","","iter_pidxs","iter_rules","iter_tidxs","kind","level","max_sentence_cost","min_sentence","min_sentence_cost","min_sentences","new","new_from_ast_with_validity_info","new_with_storaget","parse_generics","parse_param","pp_prod","prod","prod_len","prod_precedence","prod_to_rule","prods_len","programs","rule_idx","rule_name","rule_name_span","rule_name_str","rule_to_prods","rules_len","sentence_generator","start_prod","start_rule_idx","to_owned","","token_epp","token_idx","token_name","token_precedence","token_span","tokens_len","tokens_map","try_from","","","","try_into","","","","type_id","","","","DuplicateActiontypeDeclaration","DuplicateAvoidInsertDeclaration","DuplicateEPP","DuplicateExpectDeclaration","DuplicateExpectRRDeclaration","DuplicateImplicitTokensDeclaration","DuplicatePrecedence","DuplicateStartDeclaration","DuplicationError","Err","Error","ExpectedInput","Header","IllegalInteger","IllegalName","IllegalString","IncompleteAction","IncompleteComment","IncompleteRule","InvalidStartRule","InvalidString","InvalidYaccKind","MismatchedBrace","MissingColon","MissingRightArrow","NoPrecForToken","NoStartRule","NonEmptyProduction","Ok","PrecNotFollowedByToken","PrematureEnd","ProductionNotTerminated","ProgramsNotSupported","ReachedEOL","SpansKind","UnknownDeclaration","UnknownEPP","UnknownRuleRef","UnknownSymbol","UnknownToken","UnusedRule","UnusedToken","YaccGrammarError","YaccGrammarErrorKind","YaccGrammarResult","YaccGrammarWarning","YaccGrammarWarningKind","borrow","","","","","borrow_decode","","borrow_mut","","","","","clone","","","","","clone_into","","","","","clone_to_uninit","","","","","decode","","encode","","eq","","","","","equivalent","","","","","","","","","","","","","","","fmt","","","","","","","","","from","","","","","into","","","","","spans","","spanskind","","to_owned","","","","","to_string","","","","try_from","","","","","try_into","","","","","type_id","","","",""],"q":[[0,"cfgrammar"],[130,"cfgrammar::newlinecache"],[146,"cfgrammar::span"],[197,"cfgrammar::yacc"],[252,"cfgrammar::yacc::ast"],[377,"cfgrammar::yacc::firsts"],[391,"cfgrammar::yacc::follows"],[403,"cfgrammar::yacc::grammar"],[508,"cfgrammar::yacc::parser"],[653,"cfgrammar::idxnewtype"],[654,"num_traits::int"],[655,"num_traits::sign"],[656,"bincode::error"],[657,"core::result"],[658,"bincode::de"],[659,"core::clone"],[660,"core::cmp"],[661,"bincode::enc"],[662,"core::fmt"],[663,"core::hash"],[664,"core::option"],[665,"core::any"],[666,"core::iter::traits::collect"],[667,"proc_macro2"],[668,"alloc::string"],[669,"alloc::vec"],[670,"std::collections::hash::map"],[671,"indexmap::map"],[672,"std::collections::hash::set"],[673,"indexmap::set"],[674,"vob"],[675,"core::iter::traits::iterator"],[676,"core::ops::function"]],"i":"````Al`````0bjln3210432104321043210432104321043210321032104321043210433322211100044432104321043210432104`3210`32104321043210432104``Df00000000000000Ed`0`0`Eb10010101010000100011101011001000Ef01121121212`EnF`101``0````````101010101010111000`10`10`10`1010101010`````Fj`0FbFdFf00Fn1G`1234501234501234510123450123452000012220012345501234512220123451312234242222224012345052201234501234501234521`Gn000000000000`Hd0000000000`Hh0``0``Hb00I`Hf32032103203030303203220322203210322221032222001111222222222222222222222032222222103210321032Il0000000EjHj122222222222222222022222`22222Ij0`````3Gd1Gl4205120451204512045120420205120455511122200044455112200451204512041010512045120512045120451204","f":"```````````{{{d{{b{c}}}}}c{fh}}{{{d{{j{c}}}}}c{fh}}{{{d{{l{c}}}}}c{fh}}{{{d{{n{c}}}}}c{fh}}{d{{d{c}}}{}}0000{{{d{A`e}}}{{Ad{{b{g}}Ab}}}{}{{Ah{}{{Af{c}}}}}{{Aj{c}}}}{{{d{A`e}}}{{Ad{{j{g}}Ab}}}{}{{Ah{}{{Af{c}}}}}{{Aj{c}}}}{{{d{A`e}}}{{Ad{{l{g}}Ab}}}{}{{Ah{}{{Af{c}}}}}{{Aj{c}}}}{{{d{A`e}}}{{Ad{{n{g}}Ab}}}{}{{Ah{}{{Af{c}}}}}{{Aj{c}}}}{{{d{A`e}}}{{Ad{{Al{g}}Ab}}}{}{{Ah{}{{Af{c}}}}}{{Aj{c}}}}{{{d{A`}}}{{d{A`c}}}{}}0000{{{d{{b{c}}}}}{{b{c}}}An}{{{d{{j{c}}}}}{{j{c}}}An}{{{d{{l{c}}}}}{{l{c}}}An}{{{d{{n{c}}}}}{{n{c}}}An}{{{d{{Al{c}}}}}{{Al{c}}}An}{{d{d{A`c}}}B`{}}0000{{dBb}B`}0000{{{d{{b{c}}}}{d{{b{c}}}}}BdBf}{{{d{{j{c}}}}{d{{j{c}}}}}BdBf}{{{d{{l{c}}}}{d{{l{c}}}}}BdBf}{{{d{{n{c}}}}{d{{n{c}}}}}BdBf}{{d{d{c}}}Bd{}}000{{{d{A`e}}}{{Ad{{b{g}}Ab}}}{}{{Bh{}{{Af{c}}}}}{{Bj{c}}}}{{{d{A`e}}}{{Ad{{j{g}}Ab}}}{}{{Bh{}{{Af{c}}}}}{{Bj{c}}}}{{{d{A`e}}}{{Ad{{l{g}}Ab}}}{}{{Bh{}{{Af{c}}}}}{{Bj{c}}}}{{{d{A`e}}}{{Ad{{n{g}}Ab}}}{}{{Bh{}{{Af{c}}}}}{{Bj{c}}}}{{{d{A`e}}}{{Ad{{Al{g}}Ab}}}{}{{Bh{}{{Af{c}}}}}{{Bj{c}}}}{{{d{{b{c}}}}{d{A`e}}}{{Ad{B`Bl}}}BnC`}{{{d{{j{c}}}}{d{A`e}}}{{Ad{B`Bl}}}BnC`}{{{d{{l{c}}}}{d{A`e}}}{{Ad{B`Bl}}}BnC`}{{{d{{n{c}}}}{d{A`e}}}{{Ad{B`Bl}}}BnC`}{{{d{{Al{c}}}}{d{A`e}}}{{Ad{B`Bl}}}BnC`}{{{d{{b{c}}}}{d{{b{c}}}}}CbCd}{{{d{{j{c}}}}{d{{j{c}}}}}CbCd}{{{d{{l{c}}}}{d{{l{c}}}}}CbCd}{{{d{{n{c}}}}{d{{n{c}}}}}CbCd}{{{d{{Al{c}}}}{d{{Al{c}}}}}CbCd}{{d{d{c}}}Cb{}}00000000000000{{{d{{b{c}}}}{d{A`Cf}}}ChCj}{{{d{{j{c}}}}{d{A`Cf}}}ChCj}{{{d{{l{c}}}}{d{A`Cf}}}ChCj}{{{d{{n{c}}}}{d{A`Cf}}}ChCj}{{{d{{Al{c}}}}{d{A`Cf}}}ChCj}{cc{}}0000{{{d{{b{c}}}}{d{A`e}}}B`ClCn}{{{d{{j{c}}}}{d{A`e}}}B`ClCn}{{{d{{l{c}}}}{d{A`e}}}B`ClCn}{{{d{{n{c}}}}{d{A`e}}}B`ClCn}{{{d{{Al{c}}}}{d{A`e}}}B`ClCn}{{}c{}}0000`{{{d{{b{c}}}}{d{{b{c}}}}}{{D`{Bd}}}Db}{{{d{{j{c}}}}{d{{j{c}}}}}{{D`{Bd}}}Db}{{{d{{l{c}}}}{d{{l{c}}}}}{{D`{Bd}}}Db}{{{d{{n{c}}}}{d{{n{c}}}}}{{D`{Bd}}}Db}`{dc{}}0000{c{{Ad{e}}}{}{}}0000{{}{{Ad{c}}}{}}0000{dDd}0000``{d{{d{c}}}{}}{{{d{A`}}}{{d{A`c}}}{}}{{{d{Df}}Dh}{{D`{Dh}}}}0{{{d{Df}}{d{Dj}}Dh}{{D`{{Dl{DhDh}}}}}}{{{d{A`Df}}{d{Dj}}}B`}{cc{}}{cDf{{E`{}{{Dn{{d{Dj}}}}}}}}{{{d{Dj}}}{{Ad{Dfc}}}{}}{{}c{}}{{}Df}{{{d{Df}}Eb}{{Dl{DhDh}}}}=<;``````::{{{d{A`e}}}{{Ad{EbAb}}}{}{{Ah{}{{Af{c}}}}}}::{{{d{Eb}}}Eb}{{{d{Ed}}}Ed}{{d{d{A`c}}}B`{}}0{{dBb}B`}0{{{d{A`e}}}{{Ad{EbAb}}}{}{{Bh{}{{Af{c}}}}}}{{{d{Eb}}{d{A`c}}}{{Ad{B`Bl}}}C`}{{{d{Eb}}}Dh}{{{d{Eb}}{d{Eb}}}Cb}{{{d{Ed}}{d{Ed}}}Cb}{{d{d{c}}}Cb{}}00000{{{d{Eb}}{d{A`Cf}}}Ch}{{{d{Ed}}{d{A`Cf}}}Ch}{cc{}}0{EbEd}{{{d{Eb}}{d{A`c}}}B`Cn}{{}c{}}0{{{d{Eb}}}Cb}:{{DhDh}Eb}{{{d{Ef}}}{{d{{Eh{Eb}}}}}}{{{d{Ef}}}Ej}={dc{}}0{{{d{Eb}}{d{A`El}}}B`}{c{{Ad{e}}}{}{}}0{{}{{Ad{c}}}{}}0{dDd}0`````````````````{d{{d{c}}}{}}0{{{d{A`}}}{{d{A`c}}}{}}0{{{d{En}}}En}{{{d{F`}}}F`}{{d{d{A`c}}}B`{}}0{{dBb}B`}0{{{d{En}}{d{En}}}Cb}{{{d{F`}}{d{F`}}}Cb}{{d{d{c}}}Cb{}}00000`{{{d{En}}{d{A`Cf}}}Ch}{{{d{F`}}{d{A`Cf}}}Ch}`{cc{}}0`{{}c{}}0`{dc{}}0{{{d{En}}{d{A`El}}}B`}{{{d{F`}}{d{A`El}}}B`}{c{{Ad{e}}}{}{}}0{{}{{Ad{c}}}{}}0{dDd}0````````{FbD`}{FdD`}{{{d{A`Ff}}Fh{Fl{Fj}}{D`{Fh}}{D`{Fh}}Eb}B`}{{{d{A`Ff}}Fh}B`}{{{d{A`Ff}}{Dl{FhEb}}{D`{Fh}}}B`}{{{d{Fn}}}{{d{Ff}}}}{FfD`}{d{{d{c}}}{}}00000{{{d{A`}}}{{d{A`c}}}{}}00000{{{d{G`}}}G`}{{{d{Fn}}}Fn}{{{d{Ff}}}Ff}{{{d{Fd}}}Fd}{{{d{Fb}}}Fb}{{{d{Fj}}}Fj}{{{d{Fn}}Fd}{{Ad{FnG`}}}}{{d{d{A`c}}}B`{}}00000{{dBb}B`}00000{FfGb}{{{d{G`}}{d{G`}}}Cb}{{d{d{c}}}Cb{}}00{{{d{Fn}}}{{d{{Eh{Gd}}}}}}?{FfFl}{FfD`}{{{d{G`}}{d{A`Cf}}}Ch}0{{{d{Fn}}{d{A`Cf}}}Ch}{{{d{Ff}}{d{A`Cf}}}Ch}{{{d{Fd}}{d{A`Cf}}}Ch}{{{d{Fb}}{d{A`Cf}}}Ch}{{{d{Fj}}{d{A`Cf}}}Ch}0{cc{}}00000{{{d{Dj}}}{{Ad{Fn{Fl{Gd}}}}}}{{{d{Ff}}{d{Dj}}}{{D`{{d{Fd}}}}}}{{{d{Ff}}{d{Dj}}}Cb}:{{}c{}}00000{{{d{Fn}}}Cb}{FdDl}{{En{d{Dj}}}Fn}>>{FdFl}{FbD`}{FfGb}{FbEb}{FfFl}{FfD`}{FfGf}{{{d{A`Ff}}Fh}B`}32{FbFl}{dc{}}00000{dFh}0{FfGh}{FfGj}{c{{Ad{e}}}{}{}}00000{{}{{Ad{c}}}{}}00000{dDd}00000{{{d{Ff}}}{{Fl{Gl}}}}{{{d{Fn}}}En}`{d{{d{c}}}{}}{{{d{A`}}}{{d{A`c}}}{}}{{{d{{Gn{c}}}}{b{c}}}{{d{H`}}}{fh}}{{{d{{Gn{c}}}}{d{A`Cf}}}ChCj}{cc{}}{{}c{}}{{{d{{Gn{c}}}}{b{c}}}Cb{fh}}{{{d{{Gn{c}}}}{b{c}}{n{c}}}Cb{fh}}{{{d{{Hb{c}}}}}{{Gn{c}}}{fh}}{{{d{A`{Gn{c}}}}{b{c}}{n{c}}}Cb{fh}}>=<`98{{{d{{Hd{c}}}}{d{A`Cf}}}ChCj}{{{d{{Hd{c}}}}{b{c}}}{{d{H`}}}{fh}}76{{{d{{Hd{c}}}}{b{c}}{n{c}}}Cb{fh}}{{{d{{Hb{c}}}}}{{Hd{c}}}{fh}}{c{{Ad{e}}}{}{}}{{}{{Ad{c}}}{}}{dDd}````````{{{d{{Hb{c}}}}{j{c}}}{{d{{D`{Fh}}}}}{fh}}{{{d{{Hb{c}}}}{b{c}}}{{d{{D`{Fh}}}}}{fh}}{{{d{{Hb{c}}}}{n{c}}}Cb{fh}}{d{{d{c}}}{}}000{{{d{A`e}}}{{Ad{HfAb}}}{}{{Ah{}{{Af{c}}}}}}{{{d{A`e}}}{{Ad{HhAb}}}{}{{Ah{}{{Af{c}}}}}}{{{d{A`e}}}{{Ad{{Hb{g}}Ab}}}{}{{Ah{}{{Af{c}}}}}{{Aj{c}}}}{{{d{A`}}}{{d{A`c}}}{}}000{{{d{Hf}}}Hf}{{{d{Hh}}}Hh}{{d{d{A`c}}}B`{}}0{{dBb}B`}0{{{d{A`e}}}{{Ad{HfAb}}}{}{{Bh{}{{Af{c}}}}}}{{{d{A`e}}}{{Ad{HhAb}}}{}{{Bh{}{{Af{c}}}}}}{{{d{A`e}}}{{Ad{{Hb{g}}Ab}}}{}{{Bh{}{{Af{c}}}}}{{Bj{c}}}}{{{d{Hf}}{d{A`c}}}{{Ad{B`Bl}}}C`}{{{d{Hh}}{d{A`c}}}{{Ad{B`Bl}}}C`}{{{d{{Hb{c}}}}{d{A`e}}}{{Ad{B`Bl}}}BnC`}{{{d{{Hb{c}}}}}{{n{c}}}{fh}}{{{d{Hf}}{d{Hf}}}Cb}{{{d{Hh}}{d{Hh}}}Cb}{{{d{{Hb{c}}}}}{{D`{Dh}}}{fh}}0{{{d{{Hb{c}}}}}{{Gn{c}}}{fh}}{{{d{Hf}}{d{A`Cf}}}Ch}{{{d{Hh}}{d{A`Cf}}}Ch}{{{d{{Hb{c}}}}}{{Hd{c}}}{fh}}{cc{}}000{{{d{Dj}}}{{Hj{{Hb{c}}}}}{fh}}{{{d{{Hb{c}}}}{b{c}}{b{c}}}Cb{fh}}{{{d{{Hb{c}}}}}{{D`{{b{c}}}}}{fh}}{{}c{}}000{{{d{{Hb{c}}}}}{{`{{Hl{}{{Dn{{j{c}}}}}}}}}{fh}}{{{d{{Hb{c}}}}}{{`{{Hl{}{{Dn{{b{c}}}}}}}}}{fh}}{{{d{{Hb{c}}}}}{{`{{Hl{}{{Dn{{n{c}}}}}}}}}{fh}}{HfHh}{HfHn}{{{d{{I`{c}}}}{b{c}}}{{D`{Ib}}}{fh}}{{{d{{I`{c}}}}{b{c}}}{{Fl{{n{c}}}}}{fh}}{{{d{{I`{c}}}}{b{c}}}Ib{fh}}{{{d{{I`{c}}}}{b{c}}}{{Fl{{Fl{{n{c}}}}}}}{fh}}{{En{d{Dj}}}{{Hj{{Hb{Id}}}}}}{{{d{Fn}}}{{Hj{{Hb{c}}}}}{fh}}{{En{d{Dj}}}{{Hj{{Hb{c}}}}}{fh}}{{{d{{Hb{c}}}}}{{d{{D`{Fh}}}}}{fh}}{{{d{{Hb{c}}}}}{{d{{D`{{Dl{FhFh}}}}}}}{fh}}{{{d{{Hb{c}}}}{j{c}}}Fh{fh}}{{{d{{Hb{c}}}}{j{c}}}{{d{{Eh{{Al{c}}}}}}}{fh}}{{{d{{Hb{c}}}}{j{c}}}{{l{c}}}{fh}}{{{d{{Hb{c}}}}{j{c}}}{{D`{Hf}}}{fh}}{{{d{{Hb{c}}}}{j{c}}}{{b{c}}}{fh}}{{{d{{Hb{c}}}}}{{j{c}}}{fh}}7{{{d{{Hb{c}}}}{d{Dj}}}{{D`{{b{c}}}}}{fh}}{{{d{{Hb{c}}}}{b{c}}}{{d{Dj}}}{fh}}{{{d{{Hb{c}}}}{b{c}}}Eb{fh}}1{{{d{{Hb{c}}}}{b{c}}}{{d{{Eh{{j{c}}}}}}}{fh}}{{{d{{Hb{c}}}}}{{b{c}}}{fh}}{{{d{{Hb{c}}}}e}{{I`{c}}}{fh}{{Ih{{n{c}}}{{If{Bb}}}}}}61{dc{}}0{{{d{{Hb{c}}}}{n{c}}}{{D`{{d{Dj}}}}}{fh}}{{{d{{Hb{c}}}}{d{Dj}}}{{D`{{n{c}}}}}{fh}}1{{{d{{Hb{c}}}}{n{c}}}{{D`{Hf}}}{fh}}{{{d{{Hb{c}}}}{n{c}}}{{D`{Eb}}}{fh}}{{{d{{Hb{c}}}}}{{n{c}}}{fh}}{{{d{{Hb{c}}}}}{{Gb{{d{Dj}}{n{c}}}}}{fh}}{c{{Ad{e}}}{}{}}000{{}{{Ad{c}}}{}}000{dDd}000```````````````````````````````````````````````{d{{d{c}}}{}}0000{{{d{A`e}}}{{Ad{IjAb}}}{}{{Ah{}{{Af{c}}}}}}{{{d{A`e}}}{{Ad{GlAb}}}{}{{Ah{}{{Af{c}}}}}}{{{d{A`}}}{{d{A`c}}}{}}0000{{{d{Il}}}Il}{{{d{Gd}}}Gd}{{{d{Ij}}}Ij}{{{d{Gl}}}Gl}{{{d{Ej}}}Ej}{{d{d{A`c}}}B`{}}0000{{dBb}B`}0000{{{d{A`e}}}{{Ad{IjAb}}}{}{{Bh{}{{Af{c}}}}}}{{{d{A`e}}}{{Ad{GlAb}}}{}{{Bh{}{{Af{c}}}}}}{{{d{Ij}}{d{A`c}}}{{Ad{B`Bl}}}C`}{{{d{Gl}}{d{A`c}}}{{Ad{B`Bl}}}C`}{{{d{Il}}{d{Il}}}Cb}{{{d{Gd}}{d{Gd}}}Cb}{{{d{Ij}}{d{Ij}}}Cb}{{{d{Gl}}{d{Gl}}}Cb}{{{d{Ej}}{d{Ej}}}Cb}{{d{d{c}}}Cb{}}00000000000000{{{d{Il}}{d{A`Cf}}}Ch}0{{{d{Gd}}{d{A`Cf}}}Ch}0{{{d{Ij}}{d{A`Cf}}}Ch}0{{{d{Gl}}{d{A`Cf}}}Ch}0{{{d{Ej}}{d{A`Cf}}}Ch}{cc{}}0000{{}c{}}0000{{{d{Gd}}}{{d{{Eh{Eb}}}}}}{{{d{Gl}}}{{d{{Eh{Eb}}}}}}{{{d{Gd}}}Ej}{{{d{Gl}}}Ej}{dc{}}0000{dFh}000{c{{Ad{e}}}{}{}}0000{{}{{Ad{c}}}{}}0000{dDd}0000","D":"ACh","p":[[5,"RIdx",0,653],[1,"reference",null,null,1],[10,"PrimInt",654],[10,"Unsigned",655],[5,"PIdx",0,653],[5,"SIdx",0,653],[5,"TIdx",0,653],[0,"mut"],[6,"DecodeError",656],[6,"Result",657,null,1],[17,"Context"],[10,"BorrowDecoder",658],[10,"BorrowDecode",658],[6,"Symbol",0],[10,"Clone",659],[1,"unit"],[1,"u8"],[6,"Ordering",660],[10,"Ord",660],[10,"Decoder",658],[10,"Decode",658],[6,"EncodeError",656],[10,"Encode",661],[10,"Encoder",661],[1,"bool"],[10,"PartialEq",660],[5,"Formatter",662],[8,"Result",662],[10,"Debug",662],[10,"Hash",663],[10,"Hasher",663],[6,"Option",664,null,1],[10,"PartialOrd",660],[5,"TypeId",665],[5,"NewlineCache",130],[1,"usize"],[1,"str"],[1,"tuple",null,null,1],[17,"Item"],[10,"IntoIterator",666],[5,"Span",146],[6,"Location",146],[10,"Spanned",146],[1,"slice"],[6,"SpansKind",508],[5,"TokenStream",667],[6,"YaccKind",197],[6,"YaccOriginalActionKind",197],[5,"Production",252],[5,"Rule",252],[5,"GrammarAST",252],[5,"String",668],[6,"Symbol",252],[5,"Vec",669],[5,"ASTWithValidityInfo",252],[5,"ASTModificationError",252],[5,"HashMap",670],[5,"YaccGrammarError",508],[5,"IndexMap",671],[5,"HashSet",672],[5,"IndexSet",673],[5,"YaccGrammarWarning",508],[5,"YaccFirsts",377],[5,"Vob",674],[5,"YaccGrammar",403],[5,"YaccFollows",391],[5,"Precedence",403],[6,"AssocKind",403],[8,"YaccGrammarResult",508],[10,"Iterator",675],[8,"PrecedenceLevel",403],[5,"SentenceGenerator",403],[1,"u16"],[1,"u32"],[17,"Output"],[10,"Fn",676],[6,"YaccGrammarWarningKind",508],[6,"YaccGrammarErrorKind",508]],"r":[[0,146],[1,130],[2,653],[3,653],[5,653],[6,146],[7,146],[9,653],[11,653],[12,653],[13,653],[14,653],[15,653],[16,653],[17,653],[18,653],[20,653],[21,653],[22,653],[23,653],[25,653],[26,653],[27,653],[28,653],[30,653],[31,653],[32,653],[33,653],[35,653],[36,653],[37,653],[38,653],[40,653],[41,653],[42,653],[43,653],[45,653],[46,653],[47,653],[48,653],[49,653],[50,653],[51,653],[52,653],[53,653],[54,653],[55,653],[56,653],[58,653],[59,653],[60,653],[61,653],[63,653],[64,653],[65,653],[66,653],[68,653],[69,653],[70,653],[71,653],[72,653],[73,653],[74,653],[75,653],[76,653],[77,653],[78,653],[79,653],[83,653],[84,653],[85,653],[86,653],[88,653],[89,653],[90,653],[91,653],[93,653],[94,653],[95,653],[96,653],[98,653],[99,653],[100,653],[101,653],[104,653],[105,653],[106,653],[107,653],[109,653],[110,653],[111,653],[112,653],[114,653],[115,653],[116,653],[117,653],[119,653],[120,653],[121,653],[122,653],[124,653],[125,653],[126,653],[127,653],[197,403],[203,403],[204,403],[206,403],[207,508],[208,508],[209,508],[210,508]],"b":[[307,"impl-Display-for-ASTModificationError"],[308,"impl-Debug-for-ASTModificationError"],[313,"impl-Debug-for-Symbol"],[314,"impl-Display-for-Symbol"],[606,"impl-Display-for-YaccGrammarErrorKind"],[607,"impl-Debug-for-YaccGrammarErrorKind"],[608,"impl-Debug-for-YaccGrammarError"],[609,"impl-Display-for-YaccGrammarError"],[610,"impl-Display-for-YaccGrammarWarningKind"],[611,"impl-Debug-for-YaccGrammarWarningKind"],[612,"impl-Display-for-YaccGrammarWarning"],[613,"impl-Debug-for-YaccGrammarWarning"]],"c":"OjAAAAEAAAAAAAEAEAAAAAgB4AE=","e":"OzAAAAEAAPEBLwABAAEABQAAAAcAAgALAE0AXgAEAGgAGgCEAAEAiwAAAJAAAwCVAAAAlwAAAJkADACnAAkAswABAL0ACQDMAAEAzwAEANUAFwDvAAAA8gAKAAABCQALASQAMQEKAEMBAgBNAQAATwEpAHsBAQB+AQAAhQECAIkBAgCRAQgAnQEAAJ8BFgC3AQMAvAEBAMMBAADNAQEA0wEBANYBAQDoAQEA8QETAAgCEAAaAgQAIAIGACkCAAAsAjsAdgIXAA==","P":[[11,"T"],[20,"__Context,__D,T"],[24,"__Context,__D,StorageT"],[25,"T"],[34,"StorageT"],[35,"T"],[40,""],[45,"T"],[49,"K"],[53,"__Context,__D,T"],[57,"__Context,__D,StorageT"],[58,"T,__E"],[62,"StorageT,__E"],[63,"T"],[67,"StorageT"],[68,"K"],[83,"T"],[87,"StorageT"],[88,"T"],[93,"T,__H"],[97,"StorageT,__H"],[98,"U"],[104,"T"],[114,"U,T"],[119,"U"],[124,""],[131,"T"],[133,""],[137,"T"],[138,"I"],[139,"FromStr::Err"],[140,"U"],[141,""],[143,"U,T"],[144,"U"],[145,""],[152,"T"],[154,"__Context,__D"],[155,"T"],[157,""],[159,"T"],[161,""],[163,"__Context,__D"],[164,"__E"],[165,""],[168,"K"],[174,""],[176,"T"],[178,""],[179,"__H"],[180,"U"],[182,""],[188,"T"],[190,""],[191,"U,T"],[193,"U"],[195,""],[214,"T"],[218,""],[220,"T"],[222,""],[226,"K"],[233,""],[236,"T"],[239,"U"],[242,"T"],[244,""],[246,"U,T"],[248,"U"],[250,""],[267,"T"],[279,""],[286,"T"],[292,""],[300,"K"],[303,""],[315,"T"],[321,""],[325,"U"],[331,""],[347,"T"],[353,""],[357,"U,T"],[363,"U"],[369,""],[378,"T"],[380,"StorageT"],[382,"T"],[383,"U"],[384,"StorageT"],[388,"U,T"],[389,"U"],[390,""],[392,"T"],[394,"StorageT"],[396,"T"],[397,"U"],[398,"StorageT"],[400,"U,T"],[401,"U"],[402,""],[411,"StorageT"],[414,"T"],[418,"__Context,__D"],[420,"__Context,__D,StorageT"],[421,"T"],[425,""],[427,"T"],[429,""],[431,"__Context,__D"],[433,"__Context,__D,StorageT"],[434,"__E"],[436,"StorageT,__E"],[437,"StorageT"],[438,""],[440,"StorageT"],[443,""],[445,"StorageT"],[446,"T"],[450,"StorageT"],[453,"U"],[457,"StorageT"],[460,""],[462,"StorageT"],[466,""],[467,"StorageT"],[484,"StorageT,F"],[485,"StorageT"],[487,"T"],[489,"StorageT"],[496,"U,T"],[500,"U"],[504,""],[555,"T"],[560,"__Context,__D"],[562,"T"],[567,""],[572,"T"],[577,""],[582,"__Context,__D"],[584,"__E"],[586,""],[591,"K"],[606,""],[615,"T"],[620,"U"],[625,""],[629,"T"],[634,""],[638,"U,T"],[643,"U"],[648,""]]}],["cttests_macro",{"t":"Q","n":["generate_codegen_fail_tests"],"q":[[0,"cttests_macro"]],"i":"`","f":"`","D":"`","p":[],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAEAAAAAAAEAEAAAAAAAAQA=","P":[]}],["lrlex",{"t":"FFFFFPPPPPPPFFPFFIGKGPIPPPPPPPPPPPPPGFPPPGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNMNMNMNNNNNNNNNNNNNNNNNNMNMNNNNNNNQNNNNNNNNNNNNNNNNNNNNNMNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNFNNNNNNN","n":["CTLexer","CTLexerBuilder","CTTokenMapBuilder","DefaultLexeme","DefaultLexerTypes","DuplicateName","DuplicateStartState","Err","Header","InvalidName","InvalidStartState","InvalidStartStateName","LRLexError","LRNonStreamingLexer","","LRNonStreamingLexerDef","LexBuildError","LexBuildResult","LexErrorKind","LexerDef","LexerKind","MissingSpace","NonStreamingLexerDef","Ok","PrematureEnd","Private","Public","PublicCrate","PublicIn","PublicSelf","PublicSuper","RegexError","RoutinesNotSupported","Rust2015","Rust2018","Rust2021","RustEdition","StartStateId","UnknownDeclaration","UnknownStartState","VerbatimNotSupported","Visibility","allow_dead_code","allow_missing_terms_in_lexer","allow_missing_tokens_in_parser","allow_wholeline_comments","borrow","","","","","","","","","","","","","","borrow_mut","","","","","","","","","","","","","","build","","case_insensitive","clone","","","","","","","","","clone_into","","","","","","","","","clone_to_uninit","","","","","","","","","ct_token_map","dfa_size_limit","dot_matches_new_line","eq","","","equivalent","","","","","","","","","faulty","fmt","","","","","","","","","","","","","from","","","","","","","","","","","","","","from_str","","get_rule","","get_rule_by_id","","get_rule_by_name","","hash","ignore_whitespace","into","","","","","","","","","","","","","","iter","iter_rules","","iter_start_states","","lexer","lexer_in_src_dir","lexer_path","lexerkind","lexing_state","line_col","lrlex_mod","lrpar_config","mod_name","multi_line","nest_limit","new","","","","","new_faulty","new_with_lexemet","new_with_lexing_state","new_with_options","octal","output_path","posix_escapes","process_file","process_file_in_src","rename_map","rule_ids_map","rust_edition","set_rule_ids","","set_rule_ids_spanned","","show_warnings","size_limit","span","","","span_lines_str","span_str","spans","spanskind","swap_greed","to_owned","","","","","","","","","to_string","","","to_tokens","tok_id","try_from","","","","","","","","","","","","","","try_into","","","","","","","","","","","","","","type_id","","","","","","","","","","","","","","unicode","unstable_api","visibility","warnings_are_errors","InternalPublicApi","borrow","borrow_mut","from","into","try_from","try_into","type_id"],"q":[[0,"lrlex"],[278,"lrlex::unstable_api"],[286,"lrlex::ctbuilder"],[287,"core::fmt"],[288,"quote::to_tokens"],[289,"lrpar::lex_api"],[290,"core::error"],[291,"alloc::boxed"],[292,"core::result"],[293,"core::clone"],[294,"lrlex::defaults"],[295,"core::hash"],[296,"num_traits::int"],[297,"num_traits::sign"],[298,"lrlex::lexer"],[299,"std::collections::hash::map"],[300,"core::option"],[301,"alloc::string"],[302,"core::borrow"],[303,"core::cmp"],[304,"core::marker"],[305,"core::iter::traits::iterator"],[306,"core::slice::iter"],[307,"std::path"],[308,"core::convert"],[309,"cfgrammar::span"],[310,"lrpar::ctbuilder"],[311,"core::ops::function"],[312,"alloc::vec"],[313,"cfgrammar::newlinecache"],[314,"std::collections::hash::set"],[315,"core::iter::traits::collect"],[316,"proc_macro2"],[317,"cfgrammar::yacc::parser"],[318,"core::any"]],"i":"`````Cd0Ed1111``Fd``````2`12B`0000033Bb00``444`bj0040AfEh543BfC`CbE`<Cfn<876;:95432>10898;:9543>10;:9543>10;:9543>10`88;:4;;;:::4444;:9544322>100<876;:95432>10Eb404040459=987<;:6543?2170404499917`999997:51591499999:99040499<5177339<;:654?21531<5=987<;:6543?21=987<;:6543?21=987<;:6543?219`99`Hh000000","f":"``````````````````````````````````````````{{{b{c}}d}{{b{c}}}{fh}}{{{j{c}}d}{{j{c}}}{{A`{}{{l{n}}}}}}00{Ab{{Ab{c}}}{}}0000000000000{{{Ab{Ad}}}{{Ab{Adc}}}{}}0000000000000{{{j{c}}}{{Al{Af{Aj{Ah}}}}}{{A`{}{{l{n}}}}}}{{{Ab{{b{c}}}}}{{Al{An{Aj{Ah}}}}}{fh}}4{{{Ab{B`}}}B`}{{{Ab{Bb}}}Bb}{{{Ab{{b{c}}}}}{{b{c}}}{Bdfh}}{{{Ab{{Bf{c}}}}}{{Bf{c}}}{BhBjBlBnBd}}{{{Ab{{C`{c}}}}}{{C`{c}}}{BdBh}}{{{Ab{{Cb{c}}}}}{{Cb{c}}}{BdA`}}{{{Ab{Cd}}}Cd}{{{Ab{Cf}}}Cf}{{{Ab{n}}}n}{{Ab{Ab{Adc}}}An{}}00000000{{AbCh}An}00000000{{{Ab{Cj}}e{Cn{{Ab{{Cl{{Ab{Cj}}{Ab{Cj}}}}}}}}}{{Al{An{Aj{Ah}}}}}{fh}{{Db{{Cl{D`c}}}}}}{{{j{c}}Dd}{{j{c}}}{{A`{}{{l{n}}}}}}{{{j{c}}d}{{j{c}}}{{A`{}{{l{n}}}}}}{{{Ab{B`}}{Ab{B`}}}d}{{{Ab{Bb}}{Ab{Bb}}}d}{{{Ab{{C`{c}}}}{Ab{{C`{c}}}}}d{DfBh}}{{Ab{Ab{c}}}d{}}00000000{{{Ab{{C`{c}}}}}d{DhBhBjDj}}{{{Ab{B`}}{Ab{AdDl}}}Dn}{{{Ab{Bb}}{Ab{AdDl}}}Dn}{{{Ab{{b{c}}}}{Ab{AdDl}}}Dn{Bhfh}}{{{Ab{{Bf{c}}}}{Ab{AdDl}}}Dn{BhBjBlBnBh}}{{{Ab{{C`{c}}}}{Ab{AdDl}}}Dn{DhBhDjBjDh}}{{{Ab{{C`{c}}}}{Ab{AdDl}}}Dn{BhBh}}{{{Ab{{Cb{c}}}}{Ab{AdDl}}}Dn{BhA`}}{{{Ab{E`}}{Ab{AdDl}}}Dn}0{{{Ab{Cd}}{Ab{AdDl}}}Dn}{{{Ab{Cf}}{Ab{AdDl}}}Dn}{{{Ab{n}}{Ab{AdDl}}}Dn}0{cc{}}0000000000000{{{Ab{Cj}}}{{Ed{Eb}}}}{{{Ab{Cj}}}{{Ed{{Cb{c}}}}}A`}{{{Ab{Eb}}Dd}{{Cn{{Ab{`}}}}}}{{{Ab{{Cb{c}}}}Dd}{{Cn{{Ab{`}}}}}A`}{{{Ab{Eb}}}{{Ab{`}}}}{{{Ab{{Cb{c}}}}}{{Ab{`}}}A`}{{{Ab{Eb}}{Ab{Cj}}}{{Cn{{Ab{`}}}}}}{{{Ab{{Cb{c}}}}{Ab{Cj}}}{{Cn{{Ab{`}}}}}A`}{{{Ab{{C`{c}}}}{Ab{Ade}}}An{BjBh}Ef}{{{j{c}}d}{{j{c}}}{{A`{}{{l{n}}}}}}{{}c{}}0000000000000{{{Ab{{Eh{e}}}}}{{Aj{Ej}}}{BhBjBlBn}{{A`{}{{El{c}}{l{n}}}}}}{{{Ab{Eb}}}{{En{`}}}}{{{Ab{{Cb{c}}}}}{{En{`}}}A`}10{{{Ab{{Cb{e}}}}{Ab{Cj}}}{{Eh{e}}}{BhBjBlBn}{{A`{}{{El{c}}}}}}{{{j{c}}e}{{Al{{j{c}}{Aj{Ah}}}}}{{A`{}{{l{n}}}}}{{Fb{F`}}}}{{{j{c}}e}{{j{c}}}{{A`{}{{l{n}}}}}{{Fb{F`}}}}{{{j{c}}Fd}{{j{c}}}{{A`{}{{l{n}}}}}}{{{Ab{n}}}{{Cn{Cf}}}}{{{Ab{{Eh{c}}}}Ff}{{Fh{{Fh{DdDd}}{Fh{DdDd}}}}}{{A`{}{{l{n}}}}}}`{{{j{c}}e}{{j{c}}}{{A`{}{{l{n}}}}}{{Fn{{Fj{c}}}{{Fl{{Fj{c}}}}}}}}{{{j{c}}{Ab{Cj}}}{{j{c}}}{{A`{}{{l{n}}}}}}<{{{j{c}}G`}{{j{c}}}{{A`{}{{l{n}}}}}}{{}{{j{{Bf{G`}}}}}}{{{Ab{Cj}}{Gb{{Al{n}}}}Gd}{{Eh{e}}}{BhBjBlBn}{{A`{}{{El{c}}}}}}{{cg}{{b{e}}}{{Gf{D`}}}{fh}{{Db{{Cl{D`e}}}}}}{{cDdDd}{{C`{c}}}{DhBhBjDj}}{Ffn}1{{}{{j{c}}}{{A`{}{{l{n}}}}}}{{FfCf}n}`{{{j{c}}d}{{j{c}}}{{A`{}{{l{n}}}}}}>0{{{j{c}}eg}{{Al{{Fh{{Cn{{Gh{D`}}}}{Cn{{Gh{D`}}}}}}{Aj{Ah}}}}}{{A`{}{{l{n}}}}}{{Fb{F`}}}{{Fb{F`}}}}{{{j{c}}{Ab{Cj}}}{{Al{{Fh{{Cn{{Gh{D`}}}}{Cn{{Gh{D`}}}}}}{Aj{Ah}}}}}{{A`{}{{l{n}}}}}}{{{b{c}}{Cn{k}}}{{b{c}}}{fh}{{Fb{Cj}}}{{Fb{Cj}}}{{Db{{Fh{eg}}}}}{{Gl{}{{Gj{i}}}}}}{{{j{c}}e}{{j{c}}}{{A`{}{{l{n}}}}}{{Db{{Cl{D`}}}}Bd}}{{{j{c}}Bb}{{j{c}}}{{A`{}{{l{n}}}}}}{{{Ab{AdEb}}{Ab{{Cl{{Ab{Cj}}}}}}}{{Fh{{Cn{{Gh{{Ab{Cj}}}}}}{Cn{{Gh{{Ab{Cj}}}}}}}}}}{{{Ab{Ad{Cb{c}}}}{Ab{{Cl{{Ab{Cj}}}}}}}{{Fh{{Cn{{Gh{{Ab{Cj}}}}}}{Cn{{Gh{{Ab{Cj}}}}}}}}}A`}{{{Ab{AdEb}}{Ab{{Cl{{Ab{Cj}}}}}}}{{Fh{{Cn{{Gh{{Ab{Cj}}}}}}{Cn{{Gh{{Fh{{Ab{Cj}}Ff}}}}}}}}}}{{{Ab{Ad{Cb{c}}}}{Ab{{Cl{{Ab{Cj}}}}}}}{{Fh{{Cn{{Gh{{Ab{Cj}}}}}}{Cn{{Gh{{Fh{{Ab{Cj}}Ff}}}}}}}}}A`}9{{{j{c}}Dd}{{j{c}}}{{A`{}{{l{n}}}}}}{AbGn}{{{Ab{{C`{c}}}}}Ff{DhBhBjDj}}{{{Ab{n}}}Ff}{{{Ab{{Eh{c}}}}Ff}{{Ab{Cj}}}{{A`{}{{l{n}}}}}}0{{{Ab{E`}}}{{Ab{{H`{Ff}}}}}}{{{Ab{E`}}}Hb}{{{j{c}}d}{{j{c}}}{{A`{}{{l{n}}}}}}{Abc{}}00000000{AbD`}00{{{Ab{B`}}{Ab{AdHd}}}An}{{{Ab{{C`{c}}}}}c{DhBhBjDj}}{c{{Al{e}}}{}{}}0000000000000{{}{{Al{c}}}{}}0000000000000{AbHf}00000000000007`{{{j{c}}B`}{{j{c}}}{{A`{}{{l{n}}}}}}8`{Ab{{Ab{c}}}{}}{{{Ab{Ad}}}{{Ab{Adc}}}{}}{cc{}}{{}c{}}765","D":"M`","p":[[5,"CTTokenMapBuilder",0,286],[1,"bool"],[10,"Display",287],[10,"ToTokens",288],[5,"CTLexerBuilder",0,286],[17,"LexErrorT"],[5,"LRLexError",0],[10,"LexerTypes",289],[1,"reference",null,null,1],[0,"mut"],[5,"CTLexer",0,286],[10,"Error",290],[5,"Box",291,null,1],[6,"Result",292,null,1],[1,"unit"],[6,"Visibility",0,286],[6,"RustEdition",0,286],[10,"Clone",293],[5,"DefaultLexerTypes",0,294],[10,"Debug",287],[10,"Hash",295],[10,"PrimInt",296],[10,"Unsigned",297],[5,"DefaultLexeme",0,294],[5,"LRNonStreamingLexerDef",0,298],[6,"LexErrorKind",0],[5,"StartStateId",0],[1,"u8"],[1,"str"],[5,"HashMap",299],[6,"Option",300,null,1],[5,"String",301],[10,"Borrow",302],[1,"usize"],[10,"PartialEq",303],[10,"Copy",304],[10,"Eq",303],[5,"Formatter",287],[8,"Result",287],[5,"LexBuildError",0],[10,"LexerDef",0,298],[8,"LexBuildResult",0],[10,"Hasher",295],[5,"LRNonStreamingLexer",0,298],[10,"Iterator",305],[17,"StorageT"],[5,"Iter",306],[5,"Path",307],[10,"AsRef",308],[6,"LexerKind",0,286],[5,"Span",309],[1,"tuple",null,null,1],[5,"CTParserBuilder",310],[17,"Output"],[10,"Fn",311],[1,"u32"],[5,"Vec",312],[5,"NewlineCache",313],[10,"Into",308,null,1],[5,"HashSet",314],[17,"Item"],[10,"IntoIterator",315],[5,"Span",316],[1,"slice"],[6,"SpansKind",317],[5,"TokenStream",316],[5,"TypeId",318],[5,"InternalPublicApi",278]],"r":[[0,286],[1,286],[2,286],[3,294],[4,294],[13,298],[14,286],[15,298],[19,298],[20,286],[25,286],[26,286],[27,286],[28,286],[29,286],[30,286],[33,286],[34,286],[35,286],[36,286],[41,286],[42,286],[43,286],[44,286],[45,286],[46,286],[47,286],[48,286],[49,298],[50,286],[51,286],[52,286],[53,294],[54,294],[55,298],[60,286],[61,286],[62,286],[63,298],[64,286],[65,286],[66,286],[67,294],[68,294],[69,298],[74,286],[75,286],[76,286],[77,286],[78,286],[79,286],[80,294],[81,294],[82,298],[86,286],[87,286],[88,286],[89,294],[90,294],[91,298],[95,286],[96,286],[97,286],[98,294],[99,294],[100,298],[104,286],[105,286],[106,286],[107,286],[108,286],[109,294],[110,286],[111,286],[112,286],[113,286],[114,286],[115,286],[116,294],[117,294],[118,294],[119,294],[120,286],[121,286],[122,286],[123,294],[124,294],[125,294],[126,298],[133,286],[134,286],[135,286],[136,298],[137,286],[138,286],[139,286],[140,294],[141,294],[142,298],[147,298],[148,298],[149,298],[150,298],[151,298],[152,298],[153,298],[154,298],[155,294],[156,286],[157,286],[158,286],[159,286],[160,298],[161,286],[162,286],[163,286],[164,294],[165,294],[166,298],[171,298],[172,298],[173,298],[174,298],[175,298],[176,298],[177,286],[178,286],[179,286],[181,298],[183,286],[184,286],[185,286],[186,286],[187,286],[188,298],[189,286],[190,294],[192,294],[193,286],[195,298],[196,286],[197,286],[198,286],[199,286],[200,286],[201,286],[202,286],[203,286],[204,298],[205,298],[206,298],[207,298],[208,286],[209,286],[210,286],[211,294],[213,298],[214,298],[217,286],[218,286],[219,286],[220,286],[221,294],[222,294],[223,298],[227,294],[230,286],[231,294],[232,286],[233,286],[234,286],[235,298],[236,286],[237,286],[238,286],[239,294],[240,294],[241,298],[246,286],[247,286],[248,286],[249,298],[250,286],[251,286],[252,286],[253,294],[254,294],[255,298],[260,286],[261,286],[262,286],[263,298],[264,286],[265,286],[266,286],[267,294],[268,294],[269,298],[274,286],[276,286],[277,286]],"b":[[124,"impl-Display-for-DefaultLexeme%3CStorageT%3E"],[125,"impl-Debug-for-DefaultLexeme%3CStorageT%3E"],[127,"impl-Display-for-LexBuildError"],[128,"impl-Debug-for-LexBuildError"],[131,"impl-Display-for-LRLexError"],[132,"impl-Debug-for-LRLexError"]],"c":"OjAAAAEAAAAAAAMAEAAAABcAaQDIAMkA","e":"OzAAAAEAALYAGQAGAAEACQADAA8AAAASAAAAFQACABkAAAAgAAQAJgADAC8AGwBOABoAbAAZAJcAAACZAAAAmwABAKwAAACuAAAAsAAAALYAAAC/AAAAwQAAAM4AAgDTAAYA2wA3ABgBAQAcAQIA","P":[[42,"StorageT"],[43,"LexerTypesT"],[46,"T"],[74,"LexerTypesT"],[75,"StorageT"],[76,"LexerTypesT"],[77,""],[79,"StorageT"],[80,"T"],[81,"StorageT"],[82,"LexerTypesT"],[83,""],[86,"T"],[95,""],[104,"StorageT"],[105,"LexerTypesT"],[107,""],[109,"StorageT"],[110,"K"],[119,"StorageT"],[120,""],[122,"StorageT"],[123,"T"],[124,"StorageT"],[126,"LexerTypesT"],[127,""],[133,"T"],[147,""],[148,"LexerTypesT"],[149,""],[150,"LexerTypesT"],[151,""],[152,"LexerTypesT"],[153,""],[154,"LexerTypesT"],[155,"StorageT,__H"],[156,"LexerTypesT"],[157,"U"],[171,"StorageT,LexerTypesT"],[172,""],[173,"LexerTypesT"],[174,""],[175,"LexerTypesT"],[176,"StorageT,LexerTypesT"],[177,"LexerTypesT,P"],[179,"LexerTypesT"],[180,""],[181,"LexerTypesT"],[183,"LexerTypesT,F"],[184,"LexerTypesT"],[187,""],[188,"StorageT,LexerTypesT"],[189,"StorageT"],[191,""],[192,"StorageT"],[193,"LexerTypesT"],[194,""],[195,"StorageT,LexerTypesT"],[196,"LexerTypesT"],[197,"LexerTypesT,P"],[198,"LexerTypesT"],[199,"LexerTypesT,P,Q"],[200,"LexerTypesT"],[201,"StorageT,K,V,I,M"],[202,"LexerTypesT,T"],[203,"LexerTypesT"],[204,""],[205,"LexerTypesT"],[206,""],[207,"LexerTypesT"],[210,""],[211,"StorageT"],[212,""],[213,"LexerTypesT"],[215,""],[217,"LexerTypesT"],[218,"T"],[227,""],[231,"StorageT"],[232,"U,T"],[246,"U"],[260,""],[274,"LexerTypesT"],[279,"T"],[282,"U"],[283,"U,T"],[284,"U"],[285,""]]}],["lrpar",{"t":"PFFPPKPRGKRKKIKPFPGPPPPPPFGPPPGPFRGHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNMQNMNNNMNNNNNNNNNNNNNNNMMNNNMMNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNFNNNNNNN","n":["CPCTPlus","CTParser","CTParserBuilder","Delete","Insert","LexError","","LexErrorT","LexParseError","Lexeme","LexemeT","Lexer","LexerTypes","Node","NonStreamingLexer","None","ParseError","","ParseRepair","Private","Public","PublicCrate","PublicIn","PublicSelf","PublicSuper","RTParserBuilder","RecoveryKind","Rust2015","Rust2018","Rust2021","RustEdition","Shift","Span","StorageT","Visibility","action_generictree","borrow","","","","","","","","","","borrow_decode","borrow_mut","","","","","","","","","","build","clone","","","","","","clone_into","","","","","","clone_to_uninit","","","","","","conflicts","decode","encode","end","eq","","","","","equivalent","","","","","","","","","","","","error_on_conflicts","faulty","fmt","","","","","","","","","from","","","","","","","","","","","","grammar","grammar_in_src_dir","grammar_path","hash","","into","","","","","","","","","","is_empty","iter","len","lexeme","line_col","lrpar_mod","mod_name","new","","","","new_faulty","output_path","parse_actions","parse_generictree","parse_map","parse_noaction","pp","","process_file","process_file_in_src","recoverer","","regenerated","repairs","rust_edition","show_warnings","span","","","","","span_lines_str","span_str","start","stidx","term_costs","to_owned","","","","","","to_string","","to_tokens","","","tok_id","token_map","try_from","","","","","","","","","","try_into","","","","","","","","","","type_id","","","","","","","","","","unstable_api","visibility","warnings_are_errors","yacckind","InternalPublicApi","borrow","borrow_mut","from","into","try_from","try_into","type_id"],"q":[[0,"lrpar"],[219,"lrpar::unstable_api"],[227,"cfgrammar::idxnewtype"],[228,"lrpar::lex_api"],[229,"cfgrammar::span"],[230,"lrpar::parser"],[231,"alloc::vec::drain"],[232,"bincode::error"],[233,"core::result"],[234,"bincode::de"],[235,"lrpar::ctbuilder"],[236,"core::error"],[237,"alloc::boxed"],[238,"core::fmt"],[239,"core::hash"],[240,"num_traits::int"],[241,"bincode::enc"],[242,"num_traits::sign"],[243,"core::clone"],[244,"cfgrammar::yacc::grammar"],[245,"lrtable::stategraph"],[246,"lrtable::statetable"],[247,"core::option"],[248,"core::cmp"],[249,"std::path"],[250,"core::convert"],[251,"core::iter::traits::iterator"],[252,"core::ops::function"],[253,"alloc::vec"],[254,"alloc::string"],[255,"std::collections::hash::map"],[256,"proc_macro2"],[257,"lrtable"],[258,"core::any"],[259,"cfgrammar::yacc"]],"i":"Cd``Cf0`ElBn``0````3`1`C`00000``Cb00`4`2``AjAlFd43867Clh043265:8910465:91065:91065:9103000659106665559990004Cj76;99:22154376;999:21355:154376;9:211Fl23d`72753275555j<888675883F`;?522567;:?>65=6;?548987;:?=>65987;:?=>65987;:?=>65`999`Hf000000","f":"```````````````````````````````````{{{b{c}}{f{d}}h{l{{`{{j{c}}}}}}n}{{j{c}}}{}}{f{{f{c}}}{}}000000000{{{f{A`e}}}{{Ad{hAb}}}{}{{Ah{}{{Af{c}}}}}}{{{f{A`}}}{{f{A`c}}}{}}000000000{{{Aj{e}}}{{Ad{{Al{c}}{B`{An}}}}}{BbBdBfBhBj}{{Bn{}{{Bl{c}}}}}}{{{f{C`}}}C`}{{{f{Cb}}}Cb}{{{f{Cd}}}Cd}{{{f{{Cf{ec}}}}}{{Cf{ec}}}{ChBd}{Ch{Cj{c}}}}{{{f{{Cl{ec}}}}}{{Cl{ec}}}{ChBd}{Ch{Cj{c}}}}{{{f{h}}}h}{{f{f{A`c}}}n{}}00000{{fCn}n}00000`{{{f{A`e}}}{{Ad{hAb}}}{}{{Dl{}{{Af{c}}}}}}{{{f{h}}{f{A`c}}}{{Ad{nDn}}}E`}{{{f{h}}}Eb}{{{f{C`}}{f{C`}}}Ed}{{{f{Cb}}{f{Cb}}}Ed}{{{f{{Cf{ec}}}}{f{{Cf{ec}}}}}Ed{EfBd}{Ef{Cj{c}}}}{{{f{{Cl{ec}}}}{f{{Cl{ec}}}}}Ed{EfBd}{Ef{Cj{c}}}}{{{f{h}}{f{h}}}Ed}{{f{f{c}}}Ed{}}00000000000{{{Aj{e}}Ed}{{Aj{e}}}{BbBdBfBhBj}{{Bn{}{{Bl{c}}}}}}{{{f{Cj}}}Ed}{{{f{C`}}{f{A`Eh}}}Ej}{{{f{Cb}}{f{A`Eh}}}Ej}{{{f{Cd}}{f{A`Eh}}}Ej}{{{f{{El{ce}}}}{f{A`Eh}}}Ej{BbBdBfBj}{{Bn{}{{Bl{c}}}}}}{{{f{{El{ce}}}}{f{A`Eh}}}Ej{BbBbBdBfBj}{Bb{Bn{}{{Bl{c}}}}}}{{{f{{Cf{ec}}}}{f{A`Eh}}}Ej{BbBd}{Bb{Cj{c}}}}{{{f{{Cl{ec}}}}{f{A`Eh}}}Ej{BbBd}{Bb{Cj{c}}}}{{{f{{Cl{ec}}}}{f{A`Eh}}}Ej{BbBd}{{Cj{c}}}}{{{f{h}}{f{A`Eh}}}{{Ad{nEn}}}}{cc{}}000000{c{{El{eg}}}F`{BbBdBfBj}{{Bn{}{{Bl{e}}{Fb{c}}}}}}{{{Cl{c}}}{{El{ce}}}{BbBdBfBj}{{Bn{}{{Bl{c}}}}}}222{{{f{{Fd{ce}}}}}{{f{{D`{c}}}}}{BbBdBfBj}{{Bn{}{{Bl{c}}}}}}{{{Aj{e}}g}{{Ad{{Aj{e}}{B`{An}}}}}{BbBdBfBhBj}{{Bn{}{{Bl{c}}}}}{{Fh{Ff}}}}{{{Aj{e}}g}{{Aj{e}}}{BbBdBfBhBj}{{Bn{}{{Bl{c}}}}}{{Fh{Ff}}}}{{{f{{Cf{ec}}}}{f{A`g}}}n{BdBd}{Bd{Cj{c}}}Fj}{{{f{h}}{f{A`c}}}nFj}{{}c{}}000000000{{{f{h}}}Ed}{{{f{Fl}}}{{B`{Fn}}}}{{{f{h}}}Eb}{{{f{{Cl{ec}}}}}{{f{e}}}{BdBfBj}{{Cj{c}}}}{{{f{d}}h}{{Dh{{Dh{EbEb}}{Dh{EbEb}}}}}}`{{{Aj{e}}{f{G`}}}{{Aj{e}}}{BbBdBfBhBj}{{Bn{}{{Bl{c}}}}}}{{cEbEb}Cj{}}{{}{{Aj{e}}}{BbBdBfBhBj}{{Bn{}{{Bl{c}}}}}}{{{f{{D`{c}}}}{f{{Dd{c}}}}}{{Fd{ce}}}{BbBdBfBj}{{Bn{}{{Bl{c}}}}}}{{EbEb}h}3={{{f{{Fd{ce}}}}{f{d}}{f{{Gd{{f{Gb}}}}}}g}{{Dh{{Dj{i}}{Gf{{El{ce}}}}}}}{BbBdBfBj}{{Bn{}{{Bl{c}}}}}Ch{}}{{{f{{Fd{ce}}}}{f{d}}}{{Dh{{Dj{{j{c}}}}{Gf{{El{ce}}}}}}}{BbBdBfBj}{{Bn{}{{Bl{c}}}}}}{{{f{{Fd{ce}}}}{f{d}}{f{Gb}}{f{Gb}}}{{Dh{{Dj{g}}{Gf{{El{ce}}}}}}}{BbBdBfBj}{{Bn{}{{Bl{c}}}}}{}}{{{f{{Fd{ce}}}}{f{d}}}{{Gf{{El{ce}}}}}{BbBdBfBj}{{Bn{}{{Bl{c}}}}}}{{{f{{j{ec}}}}{f{{D`{c}}}}{f{G`}}}Gh{BfBj}{{Cj{c}}}}{{{f{{El{ce}}}}{f{d}}{f{Gb}}}Gh{BbBdBfBj}{{Bn{}{{Bl{c}}}}}}{{{f{A`{Aj{e}}}}gi}{{Ad{{Gj{Ghc}}{B`{An}}}}}{BbBdBfBhBj}{{Bn{}{{Bl{c}}}}}{{Fh{Ff}}}{{Fh{Ff}}}}{{{f{A`{Aj{e}}}}{f{G`}}}{{Ad{{Gj{Ghc}}{B`{An}}}}}{BbBdBfBhBj}{{Bn{}{{Bl{c}}}}}}{{{Aj{e}}Cd}{{Aj{e}}}{BbBdBfBhBj}{{Bn{}{{Bl{c}}}}}}{{{Fd{ce}}Cd}{{Fd{ce}}}{BbBdBfBj}{{Bn{}{{Bl{c}}}}}}{{{f{{Al{c}}}}}Ed{BbBdBfBj}}{{{f{{Cl{ec}}}}}{{f{{Gf{{Gf{{Cf{ec}}}}}}}}}{BdBfBj}{{Cj{c}}}}{{{Aj{e}}Cb}{{Aj{e}}}{BbBdBfBhBj}{{Bn{}{{Bl{c}}}}}}{{{Aj{e}}Ed}{{Aj{e}}}{BbBdBfBhBj}{{Bn{}{{Bl{c}}}}}}{{{f{Cj}}}h}{{{f{F`}}}h}{fGl}00{{{f{d}}h}{{f{G`}}}}0{{{f{h}}}Eb}{{{f{{Cl{ec}}}}}{{Gn{c}}}{BdBfBj}{{Cj{c}}}}{{{Fd{ce}}{f{Gb}}}{{Fd{ce}}}{BbBdBfBj}{{Bn{}{{Bl{c}}}}}}{fc{}}00000{fGh}0{{{f{C`}}{f{A`H`}}}n}{{{f{Cd}}{f{A`H`}}}n}{{{f{h}}{f{A`H`}}}n}{{{f{Cj}}}c{}}{{{f{{Al{c}}}}}{{f{{Gj{Ghc}}}}}{BbBdBfBj}}{c{{Ad{e}}}{}{}}000000000{{}{{Ad{c}}}{}}000000000{fHb}000000000`{{{Aj{e}}C`}{{Aj{e}}}{BbBdBfBhBj}{{Bn{}{{Bl{c}}}}}}{{{Aj{e}}Ed}{{Aj{e}}}{BbBdBfBhBj}{{Bn{}{{Bl{c}}}}}}{{{Aj{e}}Hd}{{Aj{e}}}{BbBdBfBhBj}{{Bn{}{{Bl{c}}}}}}`{f{{f{c}}}{}}{{{f{A`}}}{{f{A`c}}}{}}{cc{}}{{}c{}}987","D":"L`","p":[[5,"RIdx",227],[10,"NonStreamingLexer",0,228],[1,"reference",null,null,1],[5,"Span",0,229],[8,"Node",0,230],[5,"Drain",231],[1,"unit"],[0,"mut"],[6,"DecodeError",232],[6,"Result",233,null,1],[17,"Context"],[10,"BorrowDecoder",234],[5,"CTParserBuilder",0,235],[5,"CTParser",0,235],[10,"Error",236],[5,"Box",237,null,1],[10,"Debug",238],[10,"Hash",239],[10,"PrimInt",240],[10,"Encode",241],[10,"Unsigned",242],[17,"StorageT"],[10,"LexerTypes",0,228],[6,"Visibility",0,235],[6,"RustEdition",0,235],[6,"RecoveryKind",0,230],[6,"ParseRepair",0,230],[10,"Clone",243],[10,"Lexeme",0,228],[5,"ParseError",0,230],[1,"u8"],[5,"YaccGrammar",244],[5,"StateGraph",245],[5,"StateTable",246],[5,"Conflicts",246],[1,"tuple",null,null,1],[6,"Option",247,null,1],[10,"Decoder",234],[6,"EncodeError",232],[10,"Encoder",241],[1,"usize"],[1,"bool"],[10,"PartialEq",248],[5,"Formatter",238],[8,"Result",238],[6,"LexParseError",0,230],[5,"Error",238],[10,"LexError",0,228],[17,"LexErrorT"],[5,"RTParserBuilder",0,230],[5,"Path",249],[10,"AsRef",250],[10,"Hasher",239],[10,"Lexer",0,228],[10,"Iterator",251],[1,"str"],[10,"Fn",252],[1,"slice"],[5,"Vec",253],[5,"String",254],[5,"HashMap",255],[5,"Span",256],[5,"StIdx",257],[5,"TokenStream",256],[5,"TypeId",258],[6,"YaccKind",259],[5,"InternalPublicApi",219]],"r":[[0,230],[1,235],[2,235],[3,230],[4,230],[5,228],[6,230],[7,228],[8,230],[9,228],[10,228],[11,228],[12,228],[13,230],[14,228],[15,230],[16,230],[17,230],[18,230],[19,235],[20,235],[21,235],[22,235],[23,235],[24,235],[25,230],[26,230],[27,235],[28,235],[29,235],[30,235],[31,230],[32,229],[33,228],[34,235],[35,230],[36,235],[37,235],[38,230],[39,235],[40,235],[41,230],[42,230],[43,230],[44,230],[45,229],[46,229],[47,235],[48,235],[49,230],[50,235],[51,235],[52,230],[53,230],[54,230],[55,230],[56,229],[57,235],[58,235],[59,235],[60,230],[61,230],[62,230],[63,229],[64,235],[65,235],[66,230],[67,230],[68,230],[69,229],[70,235],[71,235],[72,230],[73,230],[74,230],[75,229],[76,235],[77,229],[78,229],[79,229],[80,235],[81,235],[82,230],[83,230],[84,229],[85,235],[86,235],[87,235],[88,235],[89,235],[90,235],[91,230],[92,230],[93,230],[94,229],[95,229],[96,229],[97,235],[98,228],[99,235],[100,235],[101,230],[102,230],[103,230],[104,230],[105,230],[106,230],[107,229],[108,235],[109,235],[110,230],[111,235],[112,235],[113,230],[114,230],[115,230],[116,230],[117,230],[118,230],[119,229],[120,230],[121,235],[122,235],[123,230],[124,229],[125,235],[126,235],[127,230],[128,235],[129,235],[130,230],[131,230],[132,230],[133,230],[134,229],[135,229],[136,228],[137,229],[138,230],[139,228],[141,235],[142,228],[143,235],[144,230],[145,229],[146,228],[147,235],[148,230],[149,230],[150,230],[151,230],[152,230],[153,230],[154,235],[155,235],[156,235],[157,230],[158,235],[159,230],[160,235],[161,235],[162,228],[163,228],[164,235],[165,230],[166,229],[167,228],[168,228],[169,229],[170,230],[171,230],[172,235],[173,235],[174,230],[175,230],[176,230],[177,229],[178,230],[179,230],[180,235],[181,230],[182,229],[183,228],[184,235],[185,235],[186,235],[187,230],[188,235],[189,235],[190,230],[191,230],[192,230],[193,230],[194,229],[195,235],[196,235],[197,230],[198,235],[199,235],[200,230],[201,230],[202,230],[203,230],[204,229],[205,235],[206,235],[207,230],[208,235],[209,235],[210,230],[211,230],[212,230],[213,230],[214,229],[216,235],[217,235],[218,235]],"b":[[102,"impl-Display-for-LexParseError%3CStorageT,+LexerTypesT%3E"],[103,"impl-Debug-for-LexParseError%3CStorageT,+LexerTypesT%3E"],[105,"impl-Debug-for-ParseError%3CLexemeT,+StorageT%3E"],[106,"impl-Display-for-ParseError%3CLexemeT,+StorageT%3E"],[115,"impl-From%3CT%3E-for-LexParseError%3CStorageT,+LexerTypesT%3E"],[116,"impl-From%3CParseError%3C%3CLexerTypesT+as+LexerTypes%3E::LexemeT,+StorageT%3E%3E-for-LexParseError%3CStorageT,+LexerTypesT%3E"]],"c":"OjAAAAEAAAAAAAUAEAAAAA4AJACWAJgAmwCcAA==","e":"OzAAAAEAAIMAEwAHAAEACwAAAA0AAQASAAAAHAACACIAAAAlABQAOwARAE4AAQBRABAAZAAIAHQAAQB5AAAAfAABAKUAAgCsAAsAugAdAN0AAQDhAAIA","P":[[35,"StorageT"],[36,"T"],[46,"__Context,__D"],[47,"T"],[57,"StorageT,LexerTypesT"],[58,""],[61,"StorageT,LexemeT"],[63,""],[64,"T"],[70,""],[76,"StorageT"],[77,"__Context,__D"],[78,"__E"],[79,""],[82,"StorageT,LexemeT"],[84,""],[85,"K"],[97,"StorageT,LexerTypesT"],[98,""],[102,"StorageT,LexerTypesT"],[104,"StorageT,LexemeT"],[107,""],[108,"T"],[115,"T,StorageT,LexerTypesT"],[116,"StorageT,LexerTypesT"],[117,"T"],[120,"StorageT,LexerTypesT"],[121,"StorageT,LexerTypesT,P"],[123,"StorageT,LexemeT,__H"],[124,"__H"],[125,"U"],[135,""],[138,"StorageT,LexemeT"],[139,""],[141,"StorageT,LexerTypesT"],[142,"StorageT"],[143,"StorageT,LexerTypesT"],[145,""],[146,"StorageT"],[147,"StorageT,LexerTypesT,P"],[148,"StorageT,LexerTypesT,ParamT,ActionT"],[149,"StorageT,LexerTypesT"],[150,"StorageT,LexerTypesT,Node"],[151,"StorageT,LexerTypesT"],[152,"StorageT,LexemeT"],[153,"StorageT,LexerTypesT"],[154,"StorageT,LexerTypesT,P,Q"],[155,"StorageT,LexerTypesT"],[158,"StorageT"],[159,"StorageT,LexemeT"],[160,"StorageT,LexerTypesT"],[162,""],[170,"StorageT,LexemeT"],[171,"StorageT,LexerTypesT"],[172,"T"],[178,""],[183,"StorageT"],[185,"U,T"],[195,"U"],[205,""],[216,"StorageT,LexerTypesT"],[220,"T"],[223,"U"],[224,"U,T"],[225,"U"],[226,""]]}],["lrpar_tests",{"t":"","n":[],"q":[],"i":"","f":"","D":"`","p":[],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAEAAAAAAAAAEAAAAAAA","P":[]}],["lrtable",{"t":"EGPFFEEENNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNCNNNNNNNNNNNPPGFFPPPFFFGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["Action","Minimiser","Pager","StIdx","StateGraph","StateTable","StateTableError","StateTableErrorKind","all_edges_len","all_states_len","as_storaget","borrow","","","borrow_decode","borrow_mut","","","clone","","clone_into","","clone_to_uninit","","closed_state","cmp","compare","core_state","decode","edge","edges","encode","eq","equivalent","","","fmt","","from","","","from_yacc","hash","into","","","iter_closed_states","iter_core_states","iter_stidxs","partial_cmp","pp","pp_closed_states","pp_core_states","start_state","statetable","to_owned","","try_from","","","try_into","","","type_id","","","Accept","AcceptReduceConflict","Action","Conflicts","CoreReducesIterator","Error","Reduce","Shift","StateActionsIterator","StateTable","StateTableError","StateTableErrorKind","action","borrow","","","","","","","borrow_decode","","borrow_mut","","","","","","","clone","clone_into","clone_to_uninit","conflicts","core_reduces","decode","","encode","","eq","fmt","","","","","from","","","","","","","goto","into","","","","","","","into_iter","","kind","new","next","","pidx","pp","pp_rr","pp_sr","reduce_only_state","rr_conflicts","rr_len","sr_conflicts","sr_len","start_state","state_actions","state_shifts","to_owned","to_string","try_from","","","","","","","try_into","","","","","","","type_id","","","","","",""],"q":[[0,"lrtable"],[66,"lrtable::statetable"],[166,"lrtable::stategraph"],[167,"core::hash"],[168,"num_traits::int"],[169,"num_traits::sign"],[170,"bincode::error"],[171,"core::result"],[172,"bincode::de"],[173,"core::clone"],[174,"core::cmp"],[175,"cfgrammar"],[176,"core::option"],[177,"std::collections::hash::map"],[178,"bincode::enc"],[179,"core::fmt"],[180,"cfgrammar::yacc::grammar"],[181,"core::iter::traits::iterator"],[182,"alloc::boxed"],[183,"alloc::string"],[184,"core::any"],[185,"cfgrammar::idxnewtype"]],"i":"``An`````b0n102010202020210010110000010102`010211101111`02102102102EjF````111````DfFdEnEl4Dj4614321504666644141461500632150464321504632043201114111144460321504632150463215046","f":"````````{{{d{{b{c}}}}}f{hjl}}{{{d{{b{c}}}}}{{n{c}}}{hjl}}{{{d{{n{c}}}}}c{jl}}{d{{d{c}}}{}}00{{{d{A`e}}}{{Ad{{n{g}}Ab}}}{}{{Ah{}{{Af{c}}}}}{{Aj{c}}}}{{{d{A`}}}{{d{A`c}}}{}}00{{{d{{n{c}}}}}{{n{c}}}Al}{{{d{An}}}An}{{d{d{A`c}}}B`{}}0{{dBb}B`}0{{{d{{b{c}}}}{n{c}}}{{d{{`{c}}}}}{hjl}}{{{d{{n{c}}}}{d{{n{c}}}}}BdBf}{{d{d{c}}}Bd{}}2{{{d{A`e}}}{{Ad{{n{g}}Ab}}}{}{{Bh{}{{Af{c}}}}}{{Bj{c}}}}{{{d{{b{c}}}}{n{c}}{Bl{c}}}{{Bn{{n{c}}}}}{hjl}}{{{d{{b{c}}}}{n{c}}}{{d{{C`{{Bl{c}}{n{c}}}}}}}{hjl}}{{{d{{n{c}}}}{d{A`e}}}{{Ad{B`Cb}}}CdCf}{{{d{{n{c}}}}{d{{n{c}}}}}ChCj}{{d{d{c}}}Ch{}}00{{{d{{b{c}}}}{d{A`Cl}}}Cn{D`Dbh}}{{{d{{n{c}}}}{d{A`Cl}}}CnD`}{cc{}}00{{{d{{Dd{c}}}}An}{{Ad{{Dh{{b{c}}{Df{c}}}}{Dj{c}}}}}{hjl}}{{{d{{n{c}}}}{d{A`e}}}B`hDl}{{}c{}}00{{{d{{b{c}}}}}{{E`{Dn}}}{hjl}}00{{{d{{n{c}}}}{d{{n{c}}}}}{{Bn{Bd}}}Eb}{{{d{{b{c}}}}{d{{Dd{c}}}}Ch}Ed{hjl}}{{{d{{b{c}}}}{d{{Dd{c}}}}}Ed{hjl}}0{{{d{{b{c}}}}}{{n{c}}}{hjl}}`{dc{}}0{c{{Ad{e}}}{}{}}00{{}{{Ad{c}}}{}}00{dEf}00````````````{{{d{{Df{c}}}}{n{c}}{Eh{c}}}{{Ej{c}}}{hjl}}{d{{d{c}}}{}}000000{{{d{A`e}}}{{Ad{{El{g}}Ab}}}{}{{Ah{}{{Af{c}}}}}{{Aj{c}}}}{{{d{A`e}}}{{Ad{{Df{g}}Ab}}}{}{{Ah{}{{Af{c}}}}}{{Aj{c}}}}{{{d{A`}}}{{d{A`c}}}{}}000000{{{d{{Ej{c}}}}}{{Ej{c}}}Al}{{d{d{A`c}}}B`{}}{{dBb}B`}{{{d{{Df{c}}}}}{{Bn{{d{{El{c}}}}}}}{hjl}}{{{d{{Df{c}}}}{n{c}}}{{En{c}}}{hjl}}{{{d{A`e}}}{{Ad{{El{g}}Ab}}}{}{{Bh{}{{Af{c}}}}}{{Bj{c}}}}{{{d{A`e}}}{{Ad{{Df{g}}Ab}}}{}{{Bh{}{{Af{c}}}}}{{Bj{c}}}}{{{d{{El{c}}}}{d{A`e}}}{{Ad{B`Cb}}}CdCf}{{{d{{Df{c}}}}{d{A`e}}}{{Ad{B`Cb}}}CdCf}{{{d{{Ej{c}}}}{d{{Ej{c}}}}}ChCj}{{{d{{El{c}}}}{d{A`Cl}}}CnD`}{{{d{{F`{c}}}}{d{A`Cl}}}CnD`}{{{d{{Dj{c}}}}{d{A`Cl}}}CnD`}{{{d{{Dj{c}}}}{d{A`Cl}}}Cn{}}{{{d{{Ej{c}}}}{d{A`Cl}}}CnD`}{cc{}}000000{{{d{{Df{c}}}}{n{c}}{Fb{c}}}{{Bn{{n{c}}}}}{hjl}}{{}c{}}000000{{}c{}}0{DjF`}{{{d{{Dd{c}}}}{d{{b{c}}}}}{{Ad{{Df{c}}{Dj{c}}}}}{hjl}}{{{d{A`{Fd{c}}}}}{{Bn{{Eh{c}}}}}{jl}}{{{d{A`{En{c}}}}}{{Bn{{Ff{c}}}}}{jl}}{DjFf}{{{d{{El{c}}}}{d{{Dd{c}}}}}Ed{hjl}}00{{{d{{Df{c}}}}{n{c}}}Ch{hjl}}{{{d{{El{c}}}}}{{`{{Dn{}{{Fh{{d{{Dh{{Eh{c}}{Ff{c}}{Ff{c}}{n{c}}}}}}}}}}}}}{hjl}}{{{d{{El{c}}}}}f{hjl}}{{{d{{El{c}}}}}{{`{{Dn{}{{Fh{{d{{Dh{{Eh{c}}{Ff{c}}{n{c}}}}}}}}}}}}}{hjl}}1{{{d{{Df{c}}}}}{{n{c}}}{hjl}}{{{d{{Df{c}}}}{n{c}}}{{Fd{c}}}{hjl}}0{dc{}}{dEd}{c{{Ad{e}}}{}{}}000000{{}{{Ad{c}}}{}}000000{dEf}000000","D":"G`","p":[[5,"StateGraph",0,166],[1,"reference",null,null,1],[1,"usize"],[10,"Hash",167],[10,"PrimInt",168],[10,"Unsigned",169],[5,"StIdx",0],[0,"mut"],[6,"DecodeError",170],[6,"Result",171,null,1],[17,"Context"],[10,"BorrowDecoder",172],[10,"BorrowDecode",172],[10,"Clone",173],[6,"Minimiser",0],[1,"unit"],[1,"u8"],[6,"Ordering",174],[10,"Ord",174],[10,"Decoder",172],[10,"Decode",172],[6,"Symbol",175],[6,"Option",176,null,1],[5,"HashMap",177],[6,"EncodeError",170],[10,"Encode",178],[10,"Encoder",178],[1,"bool"],[10,"PartialEq",174],[5,"Formatter",179],[8,"Result",179],[10,"Debug",179],[10,"Eq",174],[5,"YaccGrammar",180],[5,"StateTable",66],[1,"tuple",null,null,1],[5,"StateTableError",66],[10,"Hasher",167],[10,"Iterator",181],[5,"Box",182,null,1],[10,"PartialOrd",174],[5,"String",183],[5,"TypeId",184],[5,"TIdx",185],[6,"Action",66],[5,"Conflicts",66],[5,"CoreReducesIterator",66],[6,"StateTableErrorKind",66],[5,"RIdx",185],[5,"StateActionsIterator",66],[5,"PIdx",185],[17,"Item"]],"r":[[0,66],[4,166],[5,66],[6,66],[7,66],[8,166],[9,166],[11,166],[15,166],[24,166],[27,166],[29,166],[30,166],[36,166],[38,166],[43,166],[46,166],[47,166],[48,166],[50,166],[51,166],[52,166],[53,166],[57,166],[60,166],[63,166]],"b":[[107,"impl-Debug-for-StateTableError%3CStorageT%3E"],[108,"impl-Display-for-StateTableError%3CStorageT%3E"]],"c":"OjAAAAEAAAAAAAAAEAAAAIUA","e":"OzAAAAEAAG4ADwAAAAMABQADAAsADQAaAAEAHQAAACAABgAqAAEAMgAAADcACwBEAAMASwAAAFAAEgBlAAkAfgAGAJAAFgA=","P":[[8,"StorageT"],[10,"T"],[14,"__Context,__D,T"],[15,"T"],[19,""],[20,"T"],[22,""],[24,"StorageT"],[25,"T"],[26,"K"],[27,"StorageT"],[28,"__Context,__D,T"],[29,"StorageT"],[31,"T,__E"],[32,"T"],[33,"K"],[36,"StorageT"],[37,"T"],[41,"StorageT"],[42,"T,__H"],[43,"U"],[46,"StorageT"],[49,"T"],[50,"StorageT"],[55,"T"],[57,"U,T"],[60,"U"],[63,""],[78,"StorageT"],[79,"T"],[86,"__Context,__D,StorageT"],[88,"T"],[95,"StorageT"],[96,"T"],[97,""],[98,"StorageT"],[100,"__Context,__D,StorageT"],[102,"StorageT,__E"],[104,"StorageT"],[110,"T"],[117,"StorageT"],[118,"U"],[125,"I"],[127,""],[128,"StorageT"],[131,""],[132,"StorageT"],[143,"T"],[144,""],[145,"U,T"],[152,"U"],[159,""]]}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[19758,196,12213,11430,139,6636]}