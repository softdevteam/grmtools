(function() {
    var type_impls = Object.fromEntries([["lrlex",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-LRNonStreamingLexerDef%3CLexerTypesT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/lrlex/lexer.rs.html#393\">Source</a><a href=\"#impl-Clone-for-LRNonStreamingLexerDef%3CLexerTypesT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;LexerTypesT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"lrpar/lex_api/trait.LexerTypes.html\" title=\"trait lrpar::lex_api::LexerTypes\">LexerTypes</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"lrlex/struct.LRNonStreamingLexerDef.html\" title=\"struct lrlex::LRNonStreamingLexerDef\">LRNonStreamingLexerDef</a>&lt;LexerTypesT&gt;<div class=\"where\">where\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>: <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;LexerTypesT::<a class=\"associatedtype\" href=\"lrpar/lex_api/trait.LexerTypes.html#associatedtype.StorageT\" title=\"type lrpar::lex_api::LexerTypes::StorageT\">StorageT</a>&gt;,\n    LexerTypesT::<a class=\"associatedtype\" href=\"lrpar/lex_api/trait.LexerTypes.html#associatedtype.StorageT\" title=\"type lrpar::lex_api::LexerTypes::StorageT\">StorageT</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/lrlex/lexer.rs.html#393\">Source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"lrlex/struct.LRNonStreamingLexerDef.html\" title=\"struct lrlex::LRNonStreamingLexerDef\">LRNonStreamingLexerDef</a>&lt;LexerTypesT&gt;</h4></section></summary><div class='docblock'>Returns a duplicate of the value. <a href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/clone.rs.html#213-215\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","lrlex::NonStreamingLexerDef"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-LRNonStreamingLexerDef%3CLexerTypesT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/lrlex/lexer.rs.html#393\">Source</a><a href=\"#impl-Debug-for-LRNonStreamingLexerDef%3CLexerTypesT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;LexerTypesT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + <a class=\"trait\" href=\"lrpar/lex_api/trait.LexerTypes.html\" title=\"trait lrpar::lex_api::LexerTypes\">LexerTypes</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"lrlex/struct.LRNonStreamingLexerDef.html\" title=\"struct lrlex::LRNonStreamingLexerDef\">LRNonStreamingLexerDef</a>&lt;LexerTypesT&gt;<div class=\"where\">where\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>: <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;LexerTypesT::<a class=\"associatedtype\" href=\"lrpar/lex_api/trait.LexerTypes.html#associatedtype.StorageT\" title=\"type lrpar::lex_api::LexerTypes::StorageT\">StorageT</a>&gt;,\n    LexerTypesT::<a class=\"associatedtype\" href=\"lrpar/lex_api/trait.LexerTypes.html#associatedtype.StorageT\" title=\"type lrpar::lex_api::LexerTypes::StorageT\">StorageT</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/lrlex/lexer.rs.html#393\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","lrlex::NonStreamingLexerDef"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LRNonStreamingLexerDef%3CLexerTypesT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/lrlex/lexer.rs.html#531-680\">Source</a><a href=\"#impl-LRNonStreamingLexerDef%3CLexerTypesT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;StorageT: 'static + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/int/trait.PrimInt.html\" title=\"trait num_traits::int::PrimInt\">PrimInt</a> + <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/sign/trait.Unsigned.html\" title=\"trait num_traits::sign::Unsigned\">Unsigned</a>, LexerTypesT: <a class=\"trait\" href=\"lrpar/lex_api/trait.LexerTypes.html\" title=\"trait lrpar::lex_api::LexerTypes\">LexerTypes</a>&lt;StorageT = StorageT&gt;&gt; <a class=\"struct\" href=\"lrlex/struct.LRNonStreamingLexerDef.html\" title=\"struct lrlex::LRNonStreamingLexerDef\">LRNonStreamingLexerDef</a>&lt;LexerTypesT&gt;<div class=\"where\">where\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>: <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;StorageT&gt;,\n    LexerTypesT::<a class=\"associatedtype\" href=\"lrpar/lex_api/trait.LexerTypes.html#associatedtype.StorageT\" title=\"type lrpar::lex_api::LexerTypes::StorageT\">StorageT</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_with_options\" class=\"method\"><a class=\"src rightside\" href=\"src/lrlex/lexer.rs.html#540-553\">Source</a><h4 class=\"code-header\">pub fn <a href=\"lrlex/struct.LRNonStreamingLexerDef.html#tymethod.new_with_options\" class=\"fn\">new_with_options</a>(\n    s: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.str.html\">str</a>,\n    lex_flags: LexFlags,\n) -&gt; <a class=\"type\" href=\"lrlex/type.LexBuildResult.html\" title=\"type lrlex::LexBuildResult\">LexBuildResult</a>&lt;<a class=\"struct\" href=\"lrlex/struct.LRNonStreamingLexerDef.html\" title=\"struct lrlex::LRNonStreamingLexerDef\">LRNonStreamingLexerDef</a>&lt;LexerTypesT&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Uses the <code>lex_flags</code> passed in ignoring any settings in the <code>%grmtools</code> section.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lexer\" class=\"method\"><a class=\"src rightside\" href=\"src/lrlex/lexer.rs.html#557-661\">Source</a><h4 class=\"code-header\">pub fn <a href=\"lrlex/struct.LRNonStreamingLexerDef.html#tymethod.lexer\" class=\"fn\">lexer</a>&lt;'lexer, 'input: 'lexer&gt;(\n    &amp;'lexer self,\n    s: &amp;'input <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.str.html\">str</a>,\n) -&gt; <a class=\"struct\" href=\"lrlex/struct.LRNonStreamingLexer.html\" title=\"struct lrlex::LRNonStreamingLexer\">LRNonStreamingLexer</a>&lt;'lexer, 'input, LexerTypesT&gt;</h4></section></summary><div class=\"docblock\"><p>Return an <a href=\"lrlex/struct.LRNonStreamingLexer.html\" title=\"struct lrlex::LRNonStreamingLexer\">LRNonStreamingLexer</a> for the <code>String</code> <code>s</code> that will lex relative to this\n<a href=\"lrlex/struct.LRNonStreamingLexerDef.html\" title=\"struct lrlex::LRNonStreamingLexerDef\">LRNonStreamingLexerDef</a>.</p>\n</div></details></div></details>",0,"lrlex::NonStreamingLexerDef"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LexerDef%3CLexerTypesT%3E-for-LRNonStreamingLexerDef%3CLexerTypesT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/lrlex/lexer.rs.html#404-529\">Source</a><a href=\"#impl-LexerDef%3CLexerTypesT%3E-for-LRNonStreamingLexerDef%3CLexerTypesT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;LexerTypesT: <a class=\"trait\" href=\"lrpar/lex_api/trait.LexerTypes.html\" title=\"trait lrpar::lex_api::LexerTypes\">LexerTypes</a>&gt; <a class=\"trait\" href=\"lrlex/trait.LexerDef.html\" title=\"trait lrlex::LexerDef\">LexerDef</a>&lt;LexerTypesT&gt; for <a class=\"struct\" href=\"lrlex/struct.LRNonStreamingLexerDef.html\" title=\"struct lrlex::LRNonStreamingLexerDef\">LRNonStreamingLexerDef</a>&lt;LexerTypesT&gt;<div class=\"where\">where\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>: <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;LexerTypesT::<a class=\"associatedtype\" href=\"lrpar/lex_api/trait.LexerTypes.html#associatedtype.StorageT\" title=\"type lrpar::lex_api::LexerTypes::StorageT\">StorageT</a>&gt;,\n    LexerTypesT::<a class=\"associatedtype\" href=\"lrpar/lex_api/trait.LexerTypes.html#associatedtype.StorageT\" title=\"type lrpar::lex_api::LexerTypes::StorageT\">StorageT</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_str\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/lrlex/lexer.rs.html#423-436\">Source</a><a href=\"#method.from_str\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"lrlex/trait.LexerDef.html#tymethod.from_str\" class=\"fn\">from_str</a>(s: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.str.html\">str</a>) -&gt; <a class=\"type\" href=\"lrlex/type.LexBuildResult.html\" title=\"type lrlex::LexBuildResult\">LexBuildResult</a>&lt;<a class=\"struct\" href=\"lrlex/struct.LRNonStreamingLexerDef.html\" title=\"struct lrlex::LRNonStreamingLexerDef\">LRNonStreamingLexerDef</a>&lt;LexerTypesT&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Given a <code>.l</code> file in an <code>&amp;str</code>, returns a <code>LrNonStreamingLexerDef</code>\nafter merging the <code>%grmtools</code> section with the default set of <code>LexFlags</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_rule\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/lrlex/lexer.rs.html#438-440\">Source</a><a href=\"#method.get_rule\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"lrlex/trait.LexerDef.html#tymethod.get_rule\" class=\"fn\">get_rule</a>(&amp;self, idx: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;Rule&lt;LexerTypesT::<a class=\"associatedtype\" href=\"lrpar/lex_api/trait.LexerTypes.html#associatedtype.StorageT\" title=\"type lrpar::lex_api::LexerTypes::StorageT\">StorageT</a>&gt;&gt;</h4></section></summary><div class='docblock'>Get the <code>Rule</code> at index <code>idx</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_rule_by_id\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/lrlex/lexer.rs.html#442-447\">Source</a><a href=\"#method.get_rule_by_id\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"lrlex/trait.LexerDef.html#tymethod.get_rule_by_id\" class=\"fn\">get_rule_by_id</a>(\n    &amp;self,\n    tok_id: LexerTypesT::<a class=\"associatedtype\" href=\"lrpar/lex_api/trait.LexerTypes.html#associatedtype.StorageT\" title=\"type lrpar::lex_api::LexerTypes::StorageT\">StorageT</a>,\n) -&gt; &amp;Rule&lt;LexerTypesT::<a class=\"associatedtype\" href=\"lrpar/lex_api/trait.LexerTypes.html#associatedtype.StorageT\" title=\"type lrpar::lex_api::LexerTypes::StorageT\">StorageT</a>&gt;</h4></section></summary><div class='docblock'>Get the <code>Rule</code> instance associated with a particular lexeme ID. Panics if no such rule\nexists.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_rule_by_name\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/lrlex/lexer.rs.html#449-451\">Source</a><a href=\"#method.get_rule_by_name\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"lrlex/trait.LexerDef.html#tymethod.get_rule_by_name\" class=\"fn\">get_rule_by_name</a>(&amp;self, n: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;Rule&lt;LexerTypesT::<a class=\"associatedtype\" href=\"lrpar/lex_api/trait.LexerTypes.html#associatedtype.StorageT\" title=\"type lrpar::lex_api::LexerTypes::StorageT\">StorageT</a>&gt;&gt;</h4></section></summary><div class='docblock'>Get the <code>Rule</code> instance associated with a particular name.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_rule_ids\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/lrlex/lexer.rs.html#453-461\">Source</a><a href=\"#method.set_rule_ids\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"lrlex/trait.LexerDef.html#tymethod.set_rule_ids\" class=\"fn\">set_rule_ids</a>&lt;'a&gt;(\n    &amp;'a mut self,\n    rule_ids_map: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/std/collections/hash/map/struct.HashMap.html\" title=\"struct std::collections::hash::map::HashMap\">HashMap</a>&lt;&amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.str.html\">str</a>, LexerTypesT::<a class=\"associatedtype\" href=\"lrpar/lex_api/trait.LexerTypes.html#associatedtype.StorageT\" title=\"type lrpar::lex_api::LexerTypes::StorageT\">StorageT</a>&gt;,\n) -&gt; (<a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/std/collections/hash/set/struct.HashSet.html\" title=\"struct std::collections::hash::set::HashSet\">HashSet</a>&lt;&amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.str.html\">str</a>&gt;&gt;, <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/std/collections/hash/set/struct.HashSet.html\" title=\"struct std::collections::hash::set::HashSet\">HashSet</a>&lt;&amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.str.html\">str</a>&gt;&gt;)</h4></section></summary><div class='docblock'>Set the id attribute on rules to the corresponding value in <code>map</code>. This is typically used\nto synchronise a parser’s notion of lexeme IDs with the lexers. While doing this, it keeps\ntrack of which lexemes: <a href=\"lrlex/trait.LexerDef.html#tymethod.set_rule_ids\">Read more</a></div></details><section id=\"method.set_rule_ids_spanned\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/lrlex/lexer.rs.html#463-520\">Source</a><a href=\"#method.set_rule_ids_spanned\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"lrlex/trait.LexerDef.html#tymethod.set_rule_ids_spanned\" class=\"fn\">set_rule_ids_spanned</a>&lt;'a&gt;(\n    &amp;'a mut self,\n    rule_ids_map: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/std/collections/hash/map/struct.HashMap.html\" title=\"struct std::collections::hash::map::HashMap\">HashMap</a>&lt;&amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.str.html\">str</a>, LexerTypesT::<a class=\"associatedtype\" href=\"lrpar/lex_api/trait.LexerTypes.html#associatedtype.StorageT\" title=\"type lrpar::lex_api::LexerTypes::StorageT\">StorageT</a>&gt;,\n) -&gt; (<a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/std/collections/hash/set/struct.HashSet.html\" title=\"struct std::collections::hash::set::HashSet\">HashSet</a>&lt;&amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.str.html\">str</a>&gt;&gt;, <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/std/collections/hash/set/struct.HashSet.html\" title=\"struct std::collections::hash::set::HashSet\">HashSet</a>&lt;(&amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.str.html\">str</a>, <a class=\"struct\" href=\"cfgrammar/span/struct.Span.html\" title=\"struct cfgrammar::span::Span\">Span</a>)&gt;&gt;)</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_rules\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/lrlex/lexer.rs.html#522-524\">Source</a><a href=\"#method.iter_rules\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"lrlex/trait.LexerDef.html#tymethod.iter_rules\" class=\"fn\">iter_rules</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/slice/iter/struct.Iter.html\" title=\"struct core::slice::iter::Iter\">Iter</a>&lt;'_, Rule&lt;LexerTypesT::<a class=\"associatedtype\" href=\"lrpar/lex_api/trait.LexerTypes.html#associatedtype.StorageT\" title=\"type lrpar::lex_api::LexerTypes::StorageT\">StorageT</a>&gt;&gt;</h4></section></summary><div class='docblock'>Returns an iterator over all rules in this AST.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_start_states\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/lrlex/lexer.rs.html#526-528\">Source</a><a href=\"#method.iter_start_states\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"lrlex/trait.LexerDef.html#tymethod.iter_start_states\" class=\"fn\">iter_start_states</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/slice/iter/struct.Iter.html\" title=\"struct core::slice::iter::Iter\">Iter</a>&lt;'_, StartState&gt;</h4></section></summary><div class='docblock'>Returns an iterator over all start states in this AST.</div></details></div></details>","LexerDef<LexerTypesT>","lrlex::NonStreamingLexerDef"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[21381]}